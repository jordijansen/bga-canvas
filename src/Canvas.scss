/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * Crypt implementation : © Jordi Jansen <thestartplayer@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * crypt.css
 *
 * Crypt stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (crypt_crypt.tpl), and to HTML elements you create dynamically
    (in crypt.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/
@use 'sass:math';

@import '../node_modules/bga-zoom/bga-zoom';
@import '../node_modules/bga-cards/bga-cards';

$portrait-card-width: 250px;
$portrait-card-height: 425px;

$landscape-card-width: 425px;
$landscape-card-height: 250px;

.canvas-art-card {
  display: inline-block;
  position: relative;
  width: $portrait-card-width;
  height: $portrait-card-height;

  .card-sides {
    .card-side {
      border-radius: 10px;
      width: $portrait-card-width;
      height: $portrait-card-height;

      &>* {
        pointer-events: none;
        user-select: none;
      }

      &.back {
        background-image: url('img/canvas-art-card-back.png');
      }

      &.front {
        background-size: auto 600%;
        background-image: url('img/canvas-art-cards.png');

        @for $row from 0 through 5 {
          @for $column from 0 through 10 {
            $type: ($row * 11) + ($column + 1);
            &[data-type="#{$type}"] {
              background-position: #{$column * math.div(100%, 10)} #{$row * math.div(100%, 5)};
            }
          }
        }
      }
    }
  }
}

.canvas-background-card {
  display: inline-block;
  position: relative;
  width: $portrait-card-width;
  height: $portrait-card-height;

  .card-sides {
    .card-side {
      border-radius: 10px;
      width: $portrait-card-width;
      height: $portrait-card-height;

      &>* {
        pointer-events: none;
        user-select: none;
      }

      &.back {
        // No back
      }

      &.front {
        background-size: auto 300%;
        background-image: url('img/canvas-background-cards.png');

        @for $row from 0 through 2 {
          @for $column from 0 through 6 {
            $type: ($row * 7) + ($column + 1);
            &[data-type="#{$type}"] {
              background-position: #{$column * math.div(100%, 6)} #{$row * math.div(100%, 2)};
            }
          }
        }
      }
    }
  }
}

.canvas-scoring-card {
  display: inline-block;
  position: relative;
  width: $landscape-card-width;
  height: $landscape-card-height;

  .card-sides {
    .card-side {
      border-radius: 10px;
      width: $landscape-card-width;
      height: $landscape-card-height;

      &>* {
        pointer-events: none;
        user-select: none;
      }

      &.back {
        background-size: auto 400%;
        background-image: url('img/canvas-scoring-cards-back.png');

        @for $row from 0 through 3 {
          @for $column from 0 through 2 {
            $type: ($row * 3) + ($column + 1);
            &[data-type="#{$type}"] {
              background-position: #{$column * math.div(100%, 2)} #{$row * math.div(100%, 3)};
            }
          }
        }
      }

      &.front {
        background-size: auto 400%;
        background-image: url('img/canvas-scoring-cards-front.png');

        @for $row from 0 through 3 {
          @for $column from 0 through 2 {
            $type: ($row * 3) + ($column + 1);
            &[data-type="#{$type}"] {
              background-position: #{$column * math.div(100%, 2)} #{$row * math.div(100%, 3)};
            }
          }
        }
      }
    }
  }
}

#bga-zoom-controls {
  display: flex;
  flex-direction: column-reverse;
  margin-top: 5px;
}

#canvas-table {

  #canvas-board-wrapper {
    display: flex;
    justify-content: center;

    #canvas-board {
      background-image: url('img/canvas-board.png');
      background-repeat: no-repeat;
      width: 2000px;
      height: 885px;
      filter: drop-shadow(1px 1px 1px black);
      -webkit-filter: drop-shadow(1px 1px 2px black);
      position: relative;
      border-radius: 5px;

      #art-card-display {
        height: $portrait-card-height;
        position: absolute;
        top: 407px;
        margin-left: 53px;
        width: 1570px;
        display: flex;
        gap: 79px;

        .art-card-display-slot {
        }
      }

      #scoring-card-display {
        height: $landscape-card-height;
        position: absolute;
        top: 107px;
        margin-left: 50px;
        display: flex;
        gap: 40px;

        .scoring-card-display-slot {
        }
      }

      #art-card-deck {
        height: $portrait-card-height;
        position: absolute;
        top: 407px;
        right: 0;
        margin-right: 53px;
      }
    }
  }
}

#canvas-overall {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
}
